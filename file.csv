Machine learning is about designing algorithms that automatically extract
valuable information from data. The emphasis here is on “automatic”, i.e.,
machine learning is concerned about general-purpose methodologies that
can be applied to many datasets, while producing something that is meaningful. There are three concepts that are at the core of machine learning:
data, a model, and learning.
Since machine learning is inherently data driven, data is at the core data
of machine learning. The goal of machine learning is to design generalpurpose methodologies to extract valuable patterns from data, ideally
without much domain-specific expertise. For example, given a large corpus
of documents (e.g., books in many libraries), machine learning methods
can be used to automatically find relevant topics that are shared across
documents (Hoffman et al., 2010). To achieve this goal, we design models that are typically related to the process that generates data, similar to model
the dataset we are given. For example, in a regression setting, the model
would describe a function that maps inputs to real-valued outputs. To
paraphrase Mitchell (1997): A model is said to learn from data if its performance on a given task improves after the data is taken into account.
The goal is to find good models that generalize well to yet unseen data,
which we may care about in the future. Learning can be understood as a learning
way to automatically find patterns and structure in data by optimizing the
parameters of the model.
While machine learning has seen many success stories, and software is
readily available to design and train rich and flexible machine learning
systems, we believe that the mathematical foundations of machine learning are important in order to understand fundamental principles upon
which more complicated machine learning systems are built. Understanding these principles can facilitate creating new machine learning solutions,
understanding and debugging existing approaches, and learning about the
inherent assumptions and limitations of the methodologies we are working with.
A challenge we face regularly in machine learning is that concepts and
words are slippery, and a particular component of the machine learning
system can be abstracted to different mathematical concepts. For example,
the word “algorithm” is used in at least two different senses in the context of machine learning. In the first sense, we use the phrase “machine
learning algorithm” to mean a system that makes predictions based on inpredictor put data. We refer to these algorithms as predictors. In the second sense,
we use the exact same phrase “machine learning algorithm” to mean a
system that adapts some internal parameters of the predictor so that it
performs well on future unseen input data. Here we refer to this adaptatraining tion as training a system.
This book will not resolve the issue of ambiguity, but we want to highlight upfront that, depending on the context, the same expressions can
mean different things. However, we attempt to make the context sufficiently clear to reduce the level of ambiguity.
The first part of this book introduces the mathematical concepts and
foundations needed to talk about the three main components of a machine
learning system: data, models, and learning. We will briefly outline these
components here, and we will revisit them again in Chapter 8 once we
have discussed the necessary mathematical concepts.
While not all data is numerical, it is often useful to consider data in
a number format. In this book, we assume that data has already been
appropriately converted into a numerical representation suitable for readdata as vectors ing into a computer program. Therefore, we think of data as vectors. As
another illustration of how subtle words are, there are (at least) three
different ways to think about vectors: a vector as an array of numbers (a
computer science view), a vector as an arrow with a direction and magnitude (a physics view), and a vector as an object that obeys addition and
scaling (a mathematical view).
model A model is typically used to describe a process for generating data, similar to the dataset at hand. Therefore, good models can also be thought
of as simplified versions of the real (unknown) data-generating process,
capturing aspects that are relevant for modeling the data and extracting
hidden patterns from it. A good model can then be used to predict what
would happen in the real world without performing real-world experiments.
learning We now come to the crux of the matter, the learning component of
machine learning. Assume we are given a dataset and a suitable model.
Training the model means to use the data available to optimize some parameters of the model with respect to a utility function that evaluates how
well the model predicts the training data. Most training methods can be
thought of as an approach analogous to climbing a hill to reach its peak.
In this analogy, the peak of the hill corresponds to a maximum of some
desired performance measure. However, in practice, we are interested in
the model to perform well on unseen data. Performing well on data that
we have already seen (training data) may only mean that we found a
good way to memorize the data. However, this may not generalize well to
unseen data, and, in practical applications, we often need to expose our
machine learning system to situations that it has not encountered before.
Let us summarize the main concepts of machine learning that we cover
in this book:
We represent data as vectors.
We choose an appropriate model, either using the probabilistic or optimization view.
We learn from available data by using numerical optimization methods
with the aim that the model performs well on data not used for training.
1.2 Two Ways to Read This Book
We can consider two strategies for understanding the mathematics for
machine learning:
Bottom-up: Building up the concepts from foundational to more advanced. This is often the preferred approach in more technical fields,
such as mathematics. This strategy has the advantage that the reader
at all times is able to rely on their previously learned concepts. Unfortunately, for a practitioner many of the foundational concepts are not
particularly interesting by themselves, and the lack of motivation means
that most foundational definitions are quickly forgotten.
Top-down: Drilling down from practical needs to more basic requirements. This goal-driven approach has the advantage that the readers
know at all times why they need to work on a particular concept, and
there is a clear path of required knowledge. The downside of this strategy is that the knowledge is built on potentially shaky foundations, and
the readers have to remember a set of words that they do not have any
way of understanding.
We decided to write this book in a modular way to separate foundational
(mathematical) concepts from applications so that this book can be read
in both ways. The book is split into two parts, where Part I lays the mathematical foundations and Part II applies the concepts from Part I to a set
of fundamental machine learning problems, which form four pillars of
machine learning as illustrated in Figure 1.1: regression, dimensionality
reduction, density estimation, and classification. Chapters in Part I mostly
build upon the previous ones, but it is possible to skip a chapter and work
backward if necessary. Chapters in Part II are only loosely coupled and
can be read in any order. There are many pointers forward and backward
between the two parts of the book to link mathematical concepts with
machine learning algorithms.
Of course there are more than two ways to read this book. Most readers
learn using a combination of top-down and bottom-up approaches, sometimes building up basic mathematical skills before attempting more complex concepts, but also choosing topics based on applications of machine
learning.
Part I Is about Mathematics
The four pillars of machine learning we cover in this book (see Figure 1.1)
require a solid mathematical foundation, which is laid out in Part I.
We represent numerical data as vectors and represent a table of such
data as a matrix. The study of vectors and matrices is called linear algebra,
linear algebra which we introduce in Chapter 2. The collection of vectors as a matrix is
also described there.
Given two vectors representing two objects in the real world, we want
to make statements about their similarity. The idea is that vectors that
are similar should be predicted to have similar outputs by our machine
learning algorithm (our predictor). To formalize the idea of similarity between vectors, we need to introduce operations that take two vectors as
input and return a numerical value representing their similarity. The conanalytic geometry struction of similarity and distances is central to analytic geometry and is
discussed in Chapter 3.
In Chapter 4, we introduce some fundamental concepts about matrimatrix ces and matrix decomposition. Some operations on matrices are extremely
decomposition useful in machine learning, and they allow for an intuitive interpretation
of the data and more efficient learning.
We often consider data to be noisy observations of some true underlying signal. We hope that by applying machine learning we can identify the
signal from the noise. This requires us to have a language for quantifying what “noise” means. We often would also like to have predictors that
allow us to express some sort of uncertainty, e.g., to quantify the confidence we have about the value of the prediction at a particular test data
point. Quantification of uncertainty is the realm of probability theory and probability theory
is covered in Chapter 6.
To train machine learning models, we typically find parameters that
maximize some performance measure. Many optimization techniques require the concept of a gradient, which tells us the direction in which to
search for a solution. Chapter 5 is about vector calculus and details the vector calculus
concept of gradients, which we subsequently use in Chapter 7, where we
talk about optimization to find maxima/minima of functions. optimization
Part II Is about Machine Learning
The second part of the book introduces four pillars of machine learning
as shown in Figure 1.1. We illustrate how the mathematical concepts introduced in the first part of the book are the foundation for each pillar.
Broadly speaking, chapters are ordered by difficulty (in ascending order).
In Chapter 8, we restate the three components of machine learning
(data, models, and parameter estimation) in a mathematical fashion. In
addition, we provide some guidelines for building experimental set-ups
that guard against overly optimistic evaluations of machine learning systems. Recall that the goal is to build a predictor that performs well on
unseen data.
In Chapter 9, we will have a close look at linear regression, where our linear regression
objective is to find functions that map inputs x ∈ RD to corresponding observed function values y ∈ R, which we can interpret as the labels of their
respective inputs. We will discuss classical model fitting (parameter estimation) via maximum likelihood and maximum a posteriori estimation,
as well as Bayesian linear regression, where we integrate the parameters
out instead of optimizing them.
Chapter 10 focuses on dimensionality reduction, the second pillar in Fig- dimensionality
ure 1.1 reduction , using principal component analysis. The key objective of dimensionality reduction is to find a compact, lower-dimensional representation
of high-dimensional data x ∈ RD, which is often easier to analyze than
the original data. Unlike regression, dimensionality reduction is only concerned about modeling the data – there are no labels associated with a
data point x.
In Chapter 11, we will move to our third pillar: density estimation. The density estimation
objective of density estimation is to find a probability distribution that describes a given dataset. We will focus on Gaussian mixture models for this
purpose, and we will discuss an iterative scheme to find the parameters of
this model. As in dimensionality reduction, there are no labels associated
with the data points x ∈ RD. However, we do not seek a low-dimensional
representation of the data. Instead, we are interested in a density model
that describes the data.
Chapter 12 concludes the book with an in-depth discussion of the fourth
pillar: classification. We will discuss classification in the context of support
vector machines. Similar to regression (Chapter 9), we have inputs x and
corresponding labels y. However, unlike regression, where the labels were
real-valued, the labels in classification are integers, which requires special
care.